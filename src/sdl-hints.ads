--------------------------------------------------------------------------------------------------------------------
--  This source code is subject to the Zlib license, see the LICENCE file in the root of this directory.
--------------------------------------------------------------------------------------------------------------------
--  SDL.Hints
--
--  Access to library configuration variables.
--------------------------------------------------------------------------------------------------------------------
package SDL.Hints is
   pragma Preelaborate;

   --  TODO: Redo this package.
   --        This will be a complete API change.

   --  TODO: Make this more robust using more functions and platform specific
   --  packages with error checking on returned values?
   --  Would be nice to have the compiler only allow that which is allowed on
   --  a particular platform.
   --  It would be nice to have the binding test the return values as well,
   --  raising an exception on values that are just wrong for a particular
   --  platform, i.e. direct3d on Linux or Mac? Exception raised!

   --  This is raised when something has gone horribly wrong somewhere,
   --  i.e. setting the wrong hint on a platform that does not allow it.
   Hint_Error : exception;

   type Hint is
     (Accelerometer_As_Joystick,
      Allow_Alt_Tab_While_Grabbed,
      Allow_Topmost,
      Android_Apk_Expansion_Main_File_Version,
      Android_Apk_Expansion_Patch_File_Version,
      Android_Block_On_Pause,
      Android_Block_On_Pause_Pauseaudio,
      Android_Trap_Back_Button,
      App_Name,
      Apple_TV_Controller_UI_Events,
      Apple_TV_Remote_Allow_Rotation,
      Audio_Category,
      Audio_Device_App,
      Audio_Device_Stream,
      Audio_Device_Stream_Role,
      Audio_Resampling_Mode,
      Auto_Update_Joysticks,
      Auto_Update_Sensors,
      BMP_Save_Legacy_Format,
      Display_Usable_Bounds,
      Emscripten_Asyncify,
      Emscripten_Keyboard_Element,
      Enable_Screen_Keyboard,
      Enable_Steam_Controllers,
      Event_Logging,
      Hint_Force_Raise_Window,
      Frame_Buffer_Acceleration,
      Game_Controller_Config,
      Game_Controller_Config_File,
      Game_Controller_Ignore_Devices,
      Game_Controller_Ignore_Devices_Except,
      Game_Controller_Use_Button_Labels,
      Grab_Keyboard,
      HID_API_Ignore_Devices,
      IOS_Idle_Timer_Disabled,
      IME_Internal_Editing,
      IME_Show_Ui,
      IME_Support_Extended_Text,
      IOS_Hide_Home_Indicator,
      Joystick_Allow_Background_Events,
      Joystick_Arcade_Stick_Devices,
      Joystick_Arcade_Stick_Devices_Excluded,
      Joystick_Blacklist_Devices,
      Joystick_Blacklist_Devices_Excluded,
      Joystick_Flight_Stick_Devices,
      Joystick_Flight_Stick_Devices_Excluded,
      Joystick_Gamecube_Devices,
      Joystick_Gamecube_Devices_Excluded,
      Joystick_HID_API,
      Joystick_HID_API_Gamecube,
      Joystick_Gamecube_Rumble_Brake,
      Joystick_HID_API_Joy_Cons,
      Joystick_HID_API_Combine_Joy_Cons,
      Joystick_HID_API_Vertical_Joy_Cons,
      Joystick_HID_API_Luna,
      Joystick_HID_API_Nintendo_Classic,
      Joystick_HID_API_Shield,
      Joystick_HID_API_PS3,
      Joystick_HID_API_PS4,
      Joystick_HID_API_PS4_Rumble,
      Joystick_HID_API_PS5,
      Joystick_HID_API_PS5_Player_LED,
      Joystick_HID_API_PS5_Rumble,
      Joystick_HID_API_Stadia,
      Joystick_HID_API_Steam,
      Joystick_HID_API_Steamdeck,
      Joystick_HID_API_Switch,
      Joystick_HID_API_Switch_Home_LED,
      Joystick_HID_API_Joy_Con_Home_LED,
      Joystick_HID_API_Switch_Player_LED,
      Joystick_HID_API_WII,
      Joystick_HID_API_WII_Player_LED,
      Joystick_HID_API_Xbox,
      Joystick_HID_API_Xbox_360,
      Joystick_HID_API_Xbox_360_Player_LED,
      Joystick_HID_API_Xbox_360_Wireless,
      Joystick_HID_API_Xbox_One,
      Joystick_HID_API_Xbox_One_Home_LED,
      Joystick_IOKit,
      Joystick_MFI,
      Joystick_Raw_Input,
      Joystick_Raw_Input_Correlate_XInput,
      Joystick_ROG_Chakram,
      Joystick_Thread,
      Joystick_Throttle_Devices,
      Joystick_Throttle_Devices_Excluded,
      Joystick_WGI,
      Joystick_Wheel_Devices,
      Joystick_Wheel_Devices_Excluded,
      Joystick_Zero_Centered_Devices,
      KMS_DRM_Require_DRM_Master,
      Joystick_Device,
      Linux_Digital_Hats,
      Linux_Hat_Deadzones,
      Linux_Joystick_Classic,
      Linux_Joystick_Deadzones,
      Logging,
      Mac_Background_App,
      Mac_Ctrl_Click_Emulate_Right_Click,
      Mac_OpenGL_Async_Dispatch,
      Mouse_Double_Click_Radius,
      Mouse_Double_Click_Time,
      Mouse_Focus_Clickthrough,
      Mouse_Normal_Speed_Scale,
      Mouse_Relative_Mode_Center,
      Mouse_Relative_Mode_Warp,
      Mouse_Relative_Scaling,
      Mouse_Relative_Speed_Scale,
      Mouse_Relative_System_Scale,
      Mouse_Relative_Warp_Motion,
      Mouse_Relative_Cursor_Visible,
      Mouse_Touch_Events,
      Mouse_Auto_Capture,
      No_Signal_Handlers,
      OpenGL_ES_Driver,
      IOS_Orientations_Name,
      Hint_Orientations,
      Poll_Sentinel,
      Preferred_Locales,
      Qtwayland_Content_Orientation,
      Qtwayland_Window_Flags,
      Render_Batching,
      Render_Line_Method,
      Render_Direct3D11_Debug,
      Render_Direct3D_Threadsafe,
      Render_Driver,
      Render_Logical_Size_Mode,
      Render_OpenGL_Shaders,
      Render_Scale_Quality,
      Render_VSync,
      Render_Metal_Prefer_Low_Power_Device,
      ROG_Gamepad_Mice,
      ROG_Gamepad_Mice_Excluded,
      PS2_Dynamic_VSync,
      Return_Key_Hides_IME,
      RPi_Video_Layer,
      Screensaver_Inhibit_Activity_Name,
      Thread_Force_Realtime_Time_Critical,
      Thread_Priority_Policy,
      Thread_Stack_Size,
      Timer_Resolution,
      Touch_Mouse_Events,
      Vita_Touch_Mouse_Device,
      TV_Remote_As_Joystick,
      Video_Allow_Screensaver,
      Video_Double_Buffer,
      Video_EGL_Allow_Transparency,
      Video_External_Context,
      Video_High_DPI_Disabled,
      Video_Mac_Fullscreen_Spaces,
      Video_Minimize_On_Focus_Loss,
      Video_Wayland_Allow_Libdecor,
      Video_Wayland_Prefer_Libdecor,
      Video_Wayland_Mode_Emulation,
      Video_Wayland_Emulate_Mouse_Warp,
      Video_Window_Share_Pixel_Format,
      Video_Foreign_Window_OpenGL,
      Video_Foreign_Window_Vulkan,
      Video_Win_D3D_Compiler,
      Video_X11_Force_EGL,
      Video_X11_Net_WM_Bypass_Compositor,
      Video_X11_Net_WM_Ping,
      Video_X11_Window_Visualid,
      Video_X11_Xinerama,
      Video_X11_XRandR,
      Video_X11_XVidMode,
      Wave_Fact_Chunk,
      Wave_RIFF_Chunk_Size,
      Wave_Truncation,
      Windows_Disable_Thread_Naming,
      Windows_Enable_Menu_Mnemonics,
      Windows_Enable_Messageloop,
      Windows_Force_Mutex_Critical_Sections,
      Windows_Force_Semaphore_Kernel,
      Windows_Intresource_Icon,
      Windows_Intresource_Icon_Small,
      Windows_No_Close_On_Alt_F4,
      Windows_Use_D3D9_Ex,
      Windows_DPI_Awareness,
      Windows_DPI_Scaling,
      Window_No_Activation_When_Shown,
      Winrt_Handle_Back_Button,
      Winrt_Privacy_Policy_Label,
      Winrt_Privacy_Policy_URL,
      X11_Force_Override_Redirect,
      XInput_Enabled,
      Directinput_Enabled,
      XInput_Use_Old_Joystick_Mapping,
      Audio_Include_Monitors,
      X11_Window_Type,
      Quit_On_Last_Window_Close,
      Video_Driver,
      Audio_Driver,
      KMS_DRM_Device_Index,
      Trackpad_Is_Touch_Only,
      Shutdown_DBUS_On_Quit) with  -- win7 and earlier
     Discard_Names => True;

   type Priorities is (Default, Normal, Override) with
     Convention => C;

   procedure Clear with
     Import        => True,
     Convention    => C,
     External_Name => "SDL_ClearHints";

   function Get (Name : in Hint) return String with
     Inline => True;

   procedure Set (Name : in Hint; Value : in String) with
     Inline => True;

   procedure Set (Name : in Hint; Value : in String; Priority : in Priorities) with
     Inline => True;
end SDL.Hints;
